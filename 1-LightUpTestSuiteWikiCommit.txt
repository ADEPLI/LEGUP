# Direct Rule Tests

### Empty Cells in Light - LTUP-BASC-0001

Test Case 1 - Empty Cell in Light Direct Rule:  

<img width="314" alt="EmptyCells" src="https://github.com/user-attachments/assets/367281ad-979e-426e-b99a-09e7791782b0">

* Checks that the rule correctly detects empty cells in light (yellow tiles), and doesn't erroneously detect black cells, lightbulbs, or unlit empty cells as empty cells in light.

### Empty Corners - LTUP-BASC-0002

Test Case 1 - Empty Corners Test:  

<img width="313" alt="EmptyCorners" src="https://github.com/user-attachments/assets/7ab00758-de97-4fda-88d5-08a5dba0abb3">

* Checks that adding empty cell marks to (2,2), (0,2), and (4,3) does correctly satisfy the empty corners rule.
* Checks that adding an empty cell mark to (4,5) does not get accepted as satisfying the rule, as it is skipping steps.
* Checks that adding an empty cell mark to (4,1) does not falsely trigger the empty corners rule.

### Finish with Bulbs - LTUP-BASC-0003

Test Case 1 - Finish Bulb Test:  

<img width="314" alt="FinishWithBulbs" src="https://github.com/user-attachments/assets/a86f8b3b-2af5-4469-b60e-6653b4b628e7">

* TODO: HERE

Test Case 2 - Finish Bulb Test with Three:  

<img width="314" alt="FinishWithBulbsWithThree" src="https://github.com/user-attachments/assets/8f28ea0b-abcd-446e-b9e3-5ffcaa26febd">

* TODO: HERE

### Finish with Empty - LTUP-BASC-0004

Test Case 1 - Finish Empty Test with One:  

<img width="313" alt="FinishEmptyWithOne" src="https://github.com/user-attachments/assets/585d8422-9ad9-4a47-980f-adcc5158408b">

* TODO: HERE

Test Case 2 - Finish Empty Test with Three:  

<img width="311" alt="FinishEmptyWithThree" src="https://github.com/user-attachments/assets/f5be10d0-221e-484a-bac4-6116fa6852bd">

* TODO: HERE

### Must Light - LTUP-BASC-0005

Test Case 1 - Must Light Test:  

<img width="314" alt="MustLight" src="https://github.com/user-attachments/assets/eb9cd28f-2da4-4da8-95e2-fbccf0beb1a7">

* TODO: HERE


# Contradiction Rule Tests

### Bulbs In Path - LTUP-CONT-0001

Test Case 1 - Light in Horizontal Path:  

<img width="313" alt="LightInHorizontalPath" src="https://github.com/user-attachments/assets/72feca55-8961-4f7b-bc83-c615fff0df45">

* Checks that the rule correctly detects overlapping light paths, when lights are placed on the same horizontal level without any blocks between them

Test Case 2 - Light in Vertical Path:  

<img width="315" alt="LightInVerticalPath" src="https://github.com/user-attachments/assets/c9e91d23-fcad-4cf0-905c-935f42c7269b">

* Checks that the rule correctly detects overlapping light paths, when lights are placed on the same vertical level without any blocks between them

Test Case 3 - Block in Horizontal Path:  

<img width="314" alt="BlockInHorizontalPath" src="https://github.com/user-attachments/assets/1a90eb0c-f9bf-455d-a0cb-dc1ae81a06b9">

* Checks that the rule doesn't erroneously detect overlapping light paths, when lights are placed on the same horizontal level with a block placed between them

Test Case 4 - Vertical Black Between Regions:  

<img width="312" alt="BlockInVerticalPath" src="https://github.com/user-attachments/assets/b8972c60-a6c7-4470-953b-032f834338ea">

* Checks that the rule doesn't erroneously detect overlapping light paths, when lights are placed on the same vertical level with a block placed between them

### Cannot Light A Cell - LTUP-CONT-0002

Test Case 1 - Full Light Test:  

<img width="312" alt="FullLightTest" src="https://github.com/user-attachments/assets/84edcf87-d169-44c6-83db-c7af2d66b2a2">

* Checks that the rule correctly detects that (1,3) and (3,3) are unable to be lit
* Checks that the rule doesn't erroneously detect (0,0), (1,1), (1,0), and (3,2) as unable to be lit

Test Case 2 - Cannot Light Test:  

<img width="313" alt="CannotLightTest" src="https://github.com/user-attachments/assets/9c784f2b-9aaf-4509-9752-59e6de05cf58">

* Checks that the rule correctly detects that (1,1) is unable to be lit

Test Case 3 - Can Light Test:  

<img width="314" alt="CanLightTest" src="https://github.com/user-attachments/assets/b9351aa4-eeff-49c0-ae8b-3580d4376439">

* Checks that the rule doesn't erroneously detect a contradiction on the board

### Too Few Bulbs - LTUP-CONT-0003

Test Case 1 - Full Too Few Test:  

<img width="314" alt="FullTooFewTest" src="https://github.com/user-attachments/assets/e41e2e54-72be-4e9e-a373-a658fecc6c1f">

* Checks that the rule correctly detects that (1,1), (4,1), and (1,4) do not have sufficient bulbs surrounding the black tiles

Test Case 2 - Too Few Simple Test:  

<img width="316" alt="TooFew" src="https://github.com/user-attachments/assets/b9d6ebe8-f469-4db3-b530-ce9279404091">

* Checks that the rule correctly detects that the center square (1,1) is impossible to satisfy

### Too Many Bulbs - LTUP-CONT-0004

Test Case 1 - Full Too Many Test:  

<img width="314" alt="FullTooManyTest" src="https://github.com/user-attachments/assets/54344130-57e8-4d52-9876-d8e52e1d3712">

* Checks that the rule correctly detects that (1,1) and (1,4) have too many bulbs surrounding the black tiles

Test Case 2 - Too Many Simple Test:  

<img width="316" alt="TooMany" src="https://github.com/user-attachments/assets/774fd82d-9f60-4ce8-aebe-c6459ee65dba">

* Checks that the rule correctly detects that (1,1) has too many bulbs surrounding the black tiles


# Case Rule Tests

### Light or Empty - LTUP-CASE-0001

Test Case 1 - Light Or Empty Test:  

<img width="314" alt="LightOrEmpty" src="https://github.com/user-attachments/assets/2212b1f4-2a3a-4fa7-975b-193a294da6cd">

* TODO: HERE

### Satisfy Number - LTUP-CASE-0002

Test Case 1 - Satisfy Number Test:  

<img width="313" alt="SatisfyNumber" src="https://github.com/user-attachments/assets/df2933f6-8e64-4f9d-a665-aa4ba66d9e44">

* TODO: HERE

Test Case 2 - Satisfy Number Test Two:  

<img width="314" alt="SatisfyNumberTwo" src="https://github.com/user-attachments/assets/bf31af55-74f0-4b05-a0f9-05d542be2902">

* TODO: HERE